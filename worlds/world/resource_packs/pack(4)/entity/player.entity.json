{
  "format_version": "1.10.0",
  "minecraft:client_entity": {
    "description": {
      "identifier": "minecraft:player",
      "materials": {
        "default": "entity_alphatest",
        "cape": "entity_alphatest",
        "animated": "player_animated"
      },
      "textures": {
        "default": "textures/entity/steve",
        "cape": "textures/entity/cape_invisible",
        "black": "textures/entity/black",
        "blue": "textures/entity/blue",
        "brown": "textures/entity/brown",
        "cyan": "textures/entity/cyan",
        "gray": "textures/entity/gray",
        "green": "textures/entity/green",
        "light_blue": "textures/entity/light_blue",
        "lime": "textures/entity/lime",
        "magenta": "textures/entity/magenta",
        "orange": "textures/entity/orange",
        "pink": "textures/entity/pink",
        "purple": "textures/entity/purple",
        "red": "textures/entity/red",
        "silver": "textures/entity/silver",
        "white": "textures/entity/white",
        "yellow": "textures/entity/yellow",
        "iron": "textures/entity/iron",
        "amethyst": "textures/entity/amethyst",
        "gold": "textures/entity/gold",
        "diamond": "textures/entity/diamond",
        "copper": "textures/entity/copper",
        "blaze": "textures/entity/blaze",
        "emerald": "textures/entity/emerald",
        "snow": "textures/entity/snow",
        "sculk": "textures/entity/sculk",
        "redstone": "textures/entity/redstone",
        "turtle": "textures/entity/turtle",
        "pumpkin": "textures/entity/pumpkin",
        "soul_pumpkin": "textures/entity/soul_pumpkin",
        "cake": "textures/entity/cake",
        "crimson": "textures/entity/crimson",
        "warped": "textures/entity/warped",

        "full_dark": "textures/entity/full_dark",
        "smile": "textures/entity/smile",
        "dark_brown": "textures/entity/dark_brown",
        "dark_red": "textures/entity/dark_red",
        "light_red": "textures/entity/light_red",

        "noteblock": "textures/entity/noteblock",
        "cherry_leaves": "textures/entity/cherry_leaves"
      },
      "geometry": {
        "default": "geometry.humanoid.custom",
        "cape": "geometry.cape",
        "backpack": "geometry.multi_backpack"
      },
      "scripts": {
        "scale": "0.9375",
        "initialize": [
          "variable.is_holding_right = 0.0;",
          "variable.is_blinking = 0.0;",
          "variable.last_blink_time = 0.0;",
          "variable.hand_bob = 0.0;"
        ],
        "pre_animation": [
          "variable.helmet_layer_visible = 1.0;",
          "variable.leg_layer_visible = 1.0;",
          "variable.boot_layer_visible = 1.0;",
          "variable.chest_layer_visible = 1.0;",
          "variable.attack_body_rot_y = Math.sin(360*Math.sqrt(variable.attack_time)) * 5.0;",
          "variable.tcos0 = (math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;",
          "variable.first_person_rotation_factor = math.sin((1 - variable.attack_time) * 180.0);",
          "variable.hand_bob = query.life_time < 0.01 ? 0.0 : variable.hand_bob + ((query.is_on_ground && query.is_alive ? math.clamp(math.sqrt(math.pow(query.position_delta(0), 2.0) + math.pow(query.position_delta(2), 2.0)), 0.0, 0.1) : 0.0) - variable.hand_bob) * 0.02;",

          "variable.map_angle = math.clamp(1 - variable.player_x_rotation / 45.1, 0.0, 1.0);",
          "variable.item_use_normalized = query.main_hand_item_use_duration / query.main_hand_item_max_duration;"
        ],
        "animate": [
          "root"
        ]
      },
      "animations": {
        "root": "controller.animation.player.root",
        "base_controller": "controller.animation.player.base",
        "hudplayer": "controller.animation.player.hudplayer",
        "humanoid_base_pose": "animation.humanoid.base_pose",
        "look_at_target": "controller.animation.humanoid.look_at_target",
        "look_at_target_ui": "animation.player.look_at_target.ui",
        "look_at_target_default": "animation.humanoid.look_at_target.default",
        "look_at_target_gliding": "animation.humanoid.look_at_target.gliding",
        "look_at_target_swimming": "animation.humanoid.look_at_target.swimming",
        "look_at_target_inverted": "animation.player.look_at_target.inverted",
        "cape": "animation.player.cape",
        "move.arms": "animation.player.move.arms",
        "move.legs": "animation.player.move.legs",
        "swimming": "animation.player.swim",
        "swimming.legs": "animation.player.swim.legs",
        "riding.arms": "animation.player.riding.arms",
        "riding.legs": "animation.player.riding.legs",
        "holding": "animation.player.holding",
        "brandish_spear": "animation.humanoid.brandish_spear",
        "holding_spyglass": "animation.humanoid.holding_spyglass",
        "charging": "animation.humanoid.charging",
        "attack.positions": "animation.player.attack.positions",
        "attack.rotations": "animation.player.attack.rotations",
        "sneaking": "animation.player.sneaking",
        "bob": "animation.player.bob",
        "damage_nearby_mobs": "animation.humanoid.damage_nearby_mobs",
        "bow_and_arrow": "animation.humanoid.bow_and_arrow",
        "use_item_progress": "animation.humanoid.use_item_progress",
        "skeleton_attack": "animation.skeleton.attack",
        "sleeping": "animation.player.sleeping",
        "first_person_base_pose": "animation.player.first_person.base_pose",
        "first_person_empty_hand": "animation.player.first_person.empty_hand",
        "first_person_swap_item": "animation.player.first_person.swap_item",
        "first_person_shield_block": "animation.player.first_person.shield_block",
        "first_person_attack_controller": "controller.animation.player.first_person_attack",
        "first_person_attack_rotation": "animation.player.first_person.attack_rotation",
        "first_person_vr_attack_rotation": "animation.player.first_person.vr_attack_rotation",
        "first_person_walk": "animation.player.first_person.walk",
        "first_person_map_controller": "controller.animation.player.first_person_map",
        "first_person_map_hold": "animation.player.first_person.map_hold",
        "first_person_map_hold_attack": "animation.player.first_person.map_hold_attack",
        "first_person_map_hold_off_hand": "animation.player.first_person.map_hold_off_hand",
        "first_person_map_hold_main_hand": "animation.player.first_person.map_hold_main_hand",
        "first_person_crossbow_equipped": "animation.player.first_person.crossbow_equipped",
        "third_person_crossbow_equipped": "animation.player.crossbow_equipped",
        "third_person_bow_equipped": "animation.player.bow_equipped",
        "crossbow_hold": "animation.player.crossbow_hold",
        "crossbow_controller": "controller.animation.player.crossbow",
        "shield_block_main_hand": "animation.player.shield_block_main_hand",
        "shield_block_off_hand": "animation.player.shield_block_off_hand",
        "blink": "controller.animation.persona.blink"
      },
      "render_controllers": [
        { "controller.render.player.first_person": "variable.is_first_person" },
        { "controller.render.player.third_person": "!variable.is_first_person && !variable.map_face_icon" },
        { "controller.render.player.map": "variable.map_face_icon" },
        { "controller.render.black":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_black') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.blue":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_blue') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.brown":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.cyan":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_cyan') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.gray":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_gray') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.green":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_green') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.light_blue":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_light_blue') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.lime":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_lime') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.magenta":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_magenta') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.orange":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_orange') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.pink":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_pink') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.purple":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_purple') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.red":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_red') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.silver":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_silver') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.white":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_white') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.yellow":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_yellow') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.iron":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_iron') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.gold":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_gold') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.amethyst":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_amethyst') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.diamond":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_diamond') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.copper":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_copper') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.blaze_backpack":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_blaze') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.snow":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_snow') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.emerald":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_emerald') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.sculk":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_sculk') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.redstone":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_redstone') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.backpack_turtle":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_turtle') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.pumpkin":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_pumpkin') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.soul_pumpkin":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_soul_pumpkin') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.cake":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_cake') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.crimson":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_crimson') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.warped":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_warped') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},

        { "controller.render.full_dark":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_full_dark') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.smile":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_smile') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.dark_brown":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_dark_brown') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.dark_red":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_dark_red') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.light_red":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_light_red') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},

        { "controller.render.cherry_leaves":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_cherry_leaves') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"},
        { "controller.render.noteblock":"t.val = 0; t.i = 0; loop(27, { t.val = q.is_item_name_any('slot.inventory', t.i, 'heavy:multi_backpack_noteblock') && !variable.is_first_person; t.val ? {return t.val;}; t.i = t.i+1; });"}

      ],
      "enable_attachables": true
    }
  }
}
