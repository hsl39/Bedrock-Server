// Coded by @JustAsh0005 for ActualGuns (for both 2D and 3D version), you aren't allowed to Edit, alter, modify, adapt, translate or otherwise change the whole code. 

{
	"format_version": "1.10.0",
	"animation_controllers": {
		"controller.animation.akm_onfire": {
				"initial_state": "default",
				"states": {
					"default": {
						"transitions": [
							{
								"reload_start": "query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') == 1"
							},
							{
								"akm_empty": "q.get_equipped_item_name(0) == 'akm' && (q.scoreboard('akm') == 0)"
							},
							{
								"reload_error": "query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') != 1"
							},
							{
								"reload_error_real": "query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') == 1 && q.is_powered"
							}
						]
					},
					"reload_start": {
						"on_entry": [
							"v.r = q.life_time;"
						],
						"transitions": [
							{
								"reloaded": "(q.life_time - v.r) >= 0.00 && query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') == 1"
							},
							{
								"reload_error": "query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') != 1"
							},
							{
								"reload_error_real": "query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') == 1 && q.is_powered"
							}
						]
					},
					"akm_empty": {
						"on_entry": [
							"/replaceitem entity @s slot.weapon.mainhand 0 ar:akm_empty 1 0"
						],
						"transitions": [
							{
								"reload_error": "query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') != 1"
							},
							{
								"reload_error_real": "query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') == 1 && q.is_powered"
							}
						]
					},
					"reloaded": {
						"on_entry": [
							"/playsound pixelpoly.akm_draw @s"
						],
						"transitions": [
							{
								"reload_start2": "1.0"
							}
						]
					},
					"reload_start2": {
						"on_entry": [
							"v.r = q.life_time;"
						],
						"transitions": [
							{
								"reloaded2": "(q.life_time - v.r) >= 0.6 && query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') == 1"
							},
							{
								"reload_error": "query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') != 1"
							},
							{
								"reload_error_real": "query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') == 1 && q.is_powered"
							}
						]
					},
					"reloaded2": {
						"on_entry": [
						],
						"transitions": [
							{
								"shoot": "query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') == 1"
							},
							{
								"reload_error": "query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') != 1"
							},
							{
								"reload_error_real": "query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') == 1 && q.is_powered"
							}
						]
					},
					"shoot": {
						"on_entry": [
							"v.r = q.life_time;"
						],
						"transitions": [
							{
								"hip": "q.get_equipped_item_name(0) == 'akm' && query.is_using_item && !query.is_sneaking && !query.is_sprinting && !query.is_in_water && (q.scoreboard('akm') >= 1)"
							},
							{
								"akm_empty": "q.get_equipped_item_name(0) == 'akm' && (q.scoreboard('akm') == 0)"
							},
							{
								"scope": "q.get_equipped_item_name(0) == 'akm' && query.is_using_item && query.is_sneaking && !query.is_sprinting && !query.is_in_water && (q.scoreboard('akm') >= 1)"
							},
							{
								"reload_error": "query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') != 1"
							}
						]
					},
					"hip": {
						"on_entry": [
							"@s akm:fire",
							"/playanimation @s animation.akm.first_person.fire",
							"/playsound pixelpoly.akm_fire @a ~~~ 4.5",
							"/fill ~~~ ~~~ gb:muzzle_flash1 replace air",
							"/scoreboard players remove @s[m=!c,scores={akm=1..30}] akm 1"
						],
						"animations": [
							"akm_shoot_hip"
						],
						"transitions": [
							{
								"shoot": "q.all_animations_finished"
							},
							{
								"akm_empty": "q.get_equipped_item_name(0) == 'akm' && (q.scoreboard('akm') == 0)"
							},
							{
								"reload_error": "query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') != 1"
							},
							{
								"reload_error_real": "query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') == 1 && q.is_powered"
							}
						]
					},
					"scope": {
						"on_entry": [
							"@s akm:fire",
							"/playsound pixelpoly.akm_fire @a ~~~ 4.5",
							"/fill ~~~ ~~~ gb:muzzle_flash1 replace air",
							"/playanimation @s animation.akm.first_person.aim_fire",
							"/scoreboard players remove @s[m=!c,scores={akm=1..30}] akm 1"
						],
						"animations": [
							"akm_shoot_scope"
						],
						"transitions": [
							{
								"shoot": "q.all_animations_finished"
							},
							{
								"akm_empty": "q.get_equipped_item_name(0) == 'akm' && (q.scoreboard('akm') == 0)"
							},
							{
								"reload_error": "query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') != 1"
							},
							{
								"reload_error_real": "query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') == 1 && q.is_powered"
							}
						]
					},
					"reload_error": {
						"on_entry": [
							"@s normal:player",
							"@s trigger:onreload",
							"/tag @s remove reload",
							"/stopsound @s pixelpoly.akm_draw"
						],
						"transitions": [
							{
								"default": "query.equipped_item_any_tag('slot.weapon.mainhand','ag3d:akm') == 1"
							},
							{
								"akm_empty": "q.get_equipped_item_name(0) == 'akm' && (q.scoreboard('akm') == 0)"
							}
						]
					},
					"reload_error_real": {
						"on_entry": [
						],
						"transitions": [
							{
								"shoot": "1.0"
							}
						]
					}
			}
		}
	}
}

// This code is exclusive to both Add-ons (ActualGuns 2D and 3D) and can not be used by anybody else.